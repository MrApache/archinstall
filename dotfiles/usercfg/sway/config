include themes/catppuccin-mocha
include /etc/sway/config.d/*

#Autostart
exec telegram-desktop -startintray
exec steam -nochatui -nofriendsui -silent

#Autotiling plugin
exec_always autotiling

#Workspaces
assign [class="jetbrains-rider"] workspace ""
assign [class="unityhub"] workspace "󰚯"
assign [class="Unity"] workspace "󰚯"
for_window [class="Unity" title="Build Settings"] floating enable
for_window [class="Unity" title="Preferences"] floating enable
for_window [class="Unity" title="Project Settings"] floating enable
for_window [app_id="io.missioncenter.MissionCenter"] floating enable


### Variables
set $mod Mod4 
set $left h
set $down j
set $up k
set $right l
set $term kitty
set $menu bemenu-run | wmenu | xargs swaymsg exec --

### Layouts
input "type:keyboard" {
    xkb_layout us,ru
    xkb_options grp:caps_toggle
    repeat_rate 60
    repeat_delay 280
}

### Monitors
output HDMI-A-4 resolution 1920x1080@144Hz position 0,0
output HDMI-A-1 resolution 1920x1080@60Hz position 1920,0
output * {
    adaptive_sync yes
}

# Window manipulating
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

###
#Keybindings
###
bindsym --to-code $mod+Return exec $term
bindsym --to-code $mod+q kill
bindsym --to-code $mod+d exec $menu
bindsym --to-code $mod+Shift+c reload
bindsym --to-code $mod+t floating toggle
bindsym --to-code $mod+f fullscreen
#bindsym --to-code $mod+Shift+e swaymsg exit
bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#Scratchpad
bindsym --to-code $mod+Shift+p move scratchpad
bindsym --to-code $mod+p scratchpad show

#Media
bindcode --release 123 exec pamixer -u -i 5
bindcode --release 122 exec pamixer -d 5
bindcode --release 121 exec pamixer -t

# Switch workspace
bindsym --to-code --whole-window Button8 workspace prev
bindsym --to-code --whole-window Button9 workspace next
bindsym --to-code $mod+1 workspace number 1
bindsym --to-code $mod+2 workspace number 2
bindsym --to-code $mod+3 workspace number 3
bindsym --to-code $mod+4 workspace number 4
bindsym --to-code $mod+5 workspace number 5
bindsym --to-code $mod+6 workspace number 6
bindsym --to-code $mod+7 workspace number 7
bindsym --to-code $mod+8 workspace number 8
bindsym --to-code $mod+9 workspace number 9
bindsym --to-code $mod+0 workspace number 10
# Move focused container to workspace
bindsym --to-code $mod+Shift+1 move container to workspace number 1
bindsym --to-code $mod+Shift+2 move container to workspace number 2
bindsym --to-code $mod+Shift+3 move container to workspace number 3
bindsym --to-code $mod+Shift+4 move container to workspace number 4
bindsym --to-code $mod+Shift+5 move container to workspace number 5
bindsym --to-code $mod+Shift+6 move container to workspace number 6
bindsym --to-code $mod+Shift+7 move container to workspace number 7
bindsym --to-code $mod+Shift+8 move container to workspace number 8
bindsym --to-code $mod+Shift+9 move container to workspace number 9
bindsym --to-code $mod+Shift+0 move container to workspace number 10

###
#Visual
###
#Gaps
gaps inner 5

#Border
for_window [class=".*"] border pixel 2
default_border pixel 3

client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base
### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right

# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen

    # Toggle the current focus between tiling and floating mode

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Resizing containers:
#

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

bar
{
    swaybar_command waybar
}
